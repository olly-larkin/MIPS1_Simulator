#!/bin/bash

SIM=$1
mkdir -p test/output
mkdir -p test/temp
OUTFILE="test/output/out.csv"
echo "" > $OUTFILE

FAILED_TESTS=()

RUN_TEST() {
    TEST_ID=$1
    INSTRUCTION=$2
    AUTHOR=$3
    EXPECTED_OUTCOME=$5
    EXPECTED_OUTPUT=$7
    OUTPUT=$(echo $6 | $SIM test/temp/$TEST_ID.bin)
    EC=$?
    echo $EXPECTED_OUTCOME
    echo $EC
    if [[ $EC -eq $EXPECTED_OUTCOME ]]
    then
        if [ $# -eq 7 ]
        then
            if [[ $EXPECTED_OUTPUT = $OUTPUT ]]
            then
                STATUS="Pass"
            else
                STATUS="Fail"
                FAILED_TESTS+=($TEST_ID)
            fi
        else
            STATUS="Pass"
        fi
    else
        STATUS="Fail"
        FAILED_TESTS+=($TEST_ID)
    fi
    MESSAGE=$4" - exited with code "$EC
    echo $TEST_ID", "$INSTRUCTION", "$STATUS", "$AUTHOR", "$MESSAGE >> $OUTFILE
}


#************** WORK BELOW HERE ****************

# RUN_TEST "test_id" "instr" "author" "message" expected_code "stdin" "expected_stdout"

mkdir -p tbench_src/binaries

FILES="tbench_src/text_files/*.txt"
for f in $FILES; do

    exec 5< $f

    read -r line <&5
    test_id="${line:1:${#line}-1}"
    read -r line <&5
    instr="${line:1:${#line}-1}"
    read -r line <&5
    author="${line:1:${#line}-1}"
    read -r line <&5
    message="${line:1:${#line}-1}"
    read -r line <&5
    expected_code="$(echo -e "${line:1:${#line}-1}" | tr -d '[:space:]')"
    read -r line <&5
    stdin="${line:1:${#line}-1}"
    read -r line <&5
    expected_stdout="${line:1:${#line}-1}"

    parser/bin/parser $f "test/temp/#"

    if [ ${#expected_stdout} -gt 0 ]
    then
        RUN_TEST "$test_id" "$instr" "$author $message" $(($expected_code+0)) "$stdin" "$expected_stdout"
    else
        RUN_TEST "$test_id" "$instr" "$author $message" $(($expected_code+0)) "$stdin"
    fi

done

#************** WORK ABOVE HERE ****************

rm -rf test/temp


for i in ${FAILED_TESTS[*]}; do
    echo -e "Failed tests: " $i "\n"
done